{
	"info": {
		"_postman_id": "b082b12e-3efe-4f80-bb9a-d73df9fb5c81",
		"name": "PostManTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create",
			"item": [
				{
					"name": "Create Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "273e98bd-1e8f-438c-ad45-1c3a138724f3",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"OperationType is correct\"] = responseData.operationType === \"op1\";",
									"tests[\"operationId is present\"] = responseData.operationId !== null;",
									"",
									"//Save returned operationId",
									"pm.environment.set(\"envOperationId\", responseData.operationId);",
									"console.log(pm.environment.get(\"envOperationId\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ToolId\": 1,\n\t\"OperationType\": \"op1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/operations?=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"operations"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Another Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "273e98bd-1e8f-438c-ad45-1c3a138724f3",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"OperationType is correct\"] = responseData.operationType === \"op2\";",
									"tests[\"operationId is present\"] = responseData.operationId !== null;",
									"",
									"//Save returned operationId",
									"pm.environment.set(\"envOperationId2\", responseData.operationId);",
									"console.log(pm.environment.get(\"envOperationId2\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ToolId\": 2,\n\t\"OperationType\": \"op2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/operations?=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"operations"
							],
							"query": [
								{
									"key": "",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Machine Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "908ee349-105f-4111-9318-0de76a1154f1",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"desc is correct\"] = responseData.desc == \"T2\";",
									"tests[\"id is present\"] = responseData.id !== null;",
									"",
									"//Save returned MachineTypeId",
									"pm.environment.set(\"envMachineTypeId\", responseData.id);",
									"console.log(pm.environment.get(\"envMachineTypeId\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Desc\" : \"T2\",\n\t\"OperationList\" : [{{envOperationId}}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/machines/types",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"machines",
								"types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c7cb439c-901a-4e80-b283-eab8266ebee1",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"desc is correct\"] = responseData.description == \"Maquina3\";",
									"tests[\"id is present\"] = responseData.id !== null;",
									"",
									"//Save returned MachineId",
									"pm.environment.set(\"envMachineId\", responseData.id);",
									"console.log(pm.environment.get(\"envMachineId\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"Description\" : \"Maquina3\",\n \"MachineTypeId\" : {{envMachineTypeId}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/machines",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"machines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Production Line",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5cf10490-c183-415f-a5d0-6bd7bf55024e",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"productionLineName is correct\"] = responseData.productionLineName==\"Linha Produção 1\";",
									"tests[\"productionLineId is present\"] = responseData.productionLineId !== null;",
									"tests[\"machinesListDtos Expected number\"] = responseData.machinesListDtos.length == 1;",
									"",
									"//Save returned productionLineId",
									"pm.environment.set(\"envProductionLineId\", responseData.productionLineId);",
									"console.log(pm.environment.get(\"envProductionLineId\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ProductionLineName\": \"Linha Produção 1\",\n\t\"MachinesListIds\": [{{envMachineId}}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/productionlines",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"productionlines"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a95c495c-2c4e-4b1a-8c39-1d51e1d80c52",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"console.log('Nome ' + responseData.productName);",
									"tests[\"ProductName is correct\"] = responseData.productName===\"TestName\";",
									"tests[\"ProductId is present\"] = responseData.productId !== null;",
									"tests[\"PlanId is present\"] = responseData.planId !== null;",
									"",
									"pm.environment.set(\"envProductId\", responseData.productId);",
									"console.log(pm.environment.get(\"envProductId\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ProductName\": \"TestName\",\n    \"Plan\": {\n        \"OperationList\": [\n            {\n                \"OperationId\": {{envOperationId}}\n            },\n            {\n                \"OperationId\": {{envOperationId2}}\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:8090/productionapi/products/",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"productionapi",
								"products",
								""
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "69bad144-fafb-4bc6-ac14-7bd2fc87eb01",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "160edc6a-5186-4282-829f-b1815ef1f6e4",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Read",
			"item": [
				{
					"name": "Read Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61a11b90-66f7-46a0-af19-36e8828d9b2f",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"operationType is correct\"] = responseData.operationType==\"op1\";",
									"tests[\"operationId is present\"] = responseData.operationId !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/factoryapi/operations/{{envOperationId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"operations",
								"{{envOperationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Machine Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc3d8dfb-349c-4ca4-a54f-6caa83f592ee",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"desc is correct\"] = responseData.desc==\"T2\";",
									"tests[\"id is present\"] = responseData.id !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/factoryapi/machines/types/{{envMachineTypeId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"machines",
								"types",
								"{{envMachineTypeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d78780ef-f750-4b35-8faf-f2a74aafc697",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"description is correct\"] = responseData.description==\"Maquina3\";",
									"tests[\"id is present\"] = responseData.id !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/factoryapi/machines/{{envMachineId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"machines",
								"{{envMachineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Production Line",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "290be714-4d14-44c0-be74-5222021aa3be",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"productionLineName is correct\"] = responseData.productionLineName==\"Linha Produção 1\";",
									"tests[\"productionLineId is present\"] = responseData.productionLineId !== null;",
									"tests[\"machinesListDtos Expected number\"] = responseData.machinesListDtos.length == 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/factoryapi/productionlines/{{envProductionLineId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"productionlines",
								"{{envProductionLineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Operation of given Machine Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "461bf283-7c57-4c96-87f4-016c3be51551",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"desc is correct\"] = responseData[0].operationType === \"op1\";",
									"tests[\"id is present\"] = responseData.id !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/factoryapi/machines/types/{{envMachineTypeId}}/operations",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"machines",
								"types",
								"{{envMachineTypeId}}",
								"operations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "10a040c0-569b-4d4d-9046-cfb0f9bd1055",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"productlist is not empty\"] = responseData.length > 0;",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8090/productionapi/products/",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"productionapi",
								"products",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Read Plan of Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4786d62b-5b35-4725-b42f-85e5ebba9365",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"productlist is not empty\"] = responseData.length > 0;",
									"tests[\"operation1 is correct\"] = responseData[0].operationId==pm.environment.get(\"envOperationId\");",
									"tests[\"operation1 is correct\"] = responseData[1].operationId==pm.environment.get(\"envOperationId2\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:8090/productionapi/products/{{envProductId}}/plan",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"productionapi",
								"products",
								"{{envProductId}}",
								"plan"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Update",
			"item": [
				{
					"name": "Update operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "76689b18-310b-4f73-b380-6dea4a624c8a",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"operationType is correct\"] = responseData.operationType==\"op4\";",
									"tests[\"operationId is present\"] = responseData.operationId !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ToolId\": 1,\n\t\"OperationType\": \"op4\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/operations/{{envOperationId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"operations",
								"{{envOperationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4812fee7-2290-4c28-afa4-096c34658820",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"desc is correct\"] = responseData.description == \"NovoTesteMaquina\";",
									"tests[\"id is present\"] = responseData.id !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"Description\" : \"NovoTesteMaquina\",\n \"MachineTypeId\" : {{envMachineTypeId}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/machines/{{envMachineId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"machines",
								"{{envMachineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Production Line",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e122b3bf-25ab-469c-a87d-937a9f20945a",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"productionLineName is correct\"] = responseData.productionLineName==\"newProductionLineNameTest\";",
									"tests[\"productionLineId is present\"] = responseData.productionLineId !== null;",
									"tests[\"machinesListDtos Expected number\"] = responseData.machinesListDtos.length = 2;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ProductionLineName\": \"newProductionLineNameTest\",\n\t\"MachinesListIds\": [{{envMachineId}}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/productionlines/{{envProductionLineId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"productionlines",
								"{{envProductionLineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Operations of a given Machine Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ec6f10f-7888-4515-923c-ff0270004815",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"//tests[\"operationType is correct\"] = responseData.operationList[0] === pm.environment.get(\"envOperationId2\");",
									"tests[\"operationId is present\"] = responseData.operationId !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"Desc\" : \"newDesc\",\n\t\"OperationList\" : [{{envOperationId2}}]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/machines/types/{{envMachineTypeId}}/operations",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"machines",
								"types",
								"{{envMachineTypeId}}",
								"operations"
							]
						},
						"description": "Update operations of a given Machine Type"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfc8c1b7-fd76-4dfe-83b1-6f61b8a6bed2",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"operationType is correct\"] = responseData.operationType==\"op4\";",
									"tests[\"operationId is present\"] = responseData.operationId !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": "1",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/operations/{{envOperationId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"operations",
								"{{envOperationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Another Operation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfc8c1b7-fd76-4dfe-83b1-6f61b8a6bed2",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"operationType is correct\"] = responseData.operationType==\"op2\";",
									"tests[\"operationId is present\"] = responseData.operationId !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "",
								"type": "text",
								"value": "1",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:5001/factoryapi/operations/{{envOperationId2}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"operations",
								"{{envOperationId2}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Production Line",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "716267a2-6056-4455-83ab-7a0b969e7de2",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"productionLineName is correct\"] = responseData.productionLineName === \"newProductionLineNameTest\";",
									"console.log(responseData);",
									"tests[\"productionLineId is present\"] = responseData.productionLineId !== null;",
									"tests[\"machinesListDtos Expected number\"] = responseData.machinesListDtos.length == 1;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/factoryapi/productionlines/{{envProductionLineId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"productionlines",
								"{{envProductionLineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete machine",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e559810a-52ff-4347-a38b-6de44900a13b",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"tests[\"desc is correct\"] = responseData.description == \"NovoTesteMaquina\";",
									"tests[\"id is present\"] = responseData.id !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/factoryapi/machines/{{envMachineId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"machines",
								"{{envMachineId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1653a2a6-c88f-4a96-b357-3ef5b3a5e959",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"console.log(responseData);",
									"tests[\"desc is correct\"] = responseData.productName == \"TestName\";",
									"tests[\"id is present\"] = responseData.id !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:8090/productionapi/products/{{envProductId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "8090",
							"path": [
								"productionapi",
								"products",
								"{{envProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Machine Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "91ed3e7c-57c7-4aae-a48b-f6bff9805f8a",
								"exec": [
									"var responseData = JSON.parse(responseBody);",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Content-Type is present\"] = postman.getResponseHeader(\"Content-Type\");",
									"console.log(responseData);",
									"//tests[\"desc is correct\"] = responseData.productName == \"TestName\";",
									"tests[\"id is present\"] = responseData.id !== null;"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/factoryapi/machines/types/{{envMachineTypeId}}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"factoryapi",
								"machines",
								"types",
								"{{envMachineTypeId}}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}