// <auto-generated />

using factoryApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using factoryApi.Models;

namespace factoryApi.Migrations
{
    [DbContext(typeof(MasterFactoryContext))]
    [Migration("20191012114619_MasterContext")]
    partial class MasterContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("factoryApi.Models.Machine.Machine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("factoryApi.Models.Operation.Operation", b =>
                {
                    b.Property<long>("OperationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("OperationId");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("factoryApi.Models.ProductionLine.ProductionLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("ProductionLines");
                });

            modelBuilder.Entity("factoryApi.Models.Operation.Operation", b =>
                {
                    b.OwnsOne("factoryApi.Models.Operation.OperationType", "OperationType", b1 =>
                        {
                            b1.Property<long>("OperationId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Desc")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("OperationType")
                                .HasDefaultValue("");

                            b1.HasKey("OperationId");

                            b1.ToTable("Operations");

                            b1.HasOne("factoryApi.Models.Operation.Operation")
                                .WithOne("OperationType")
                                .HasForeignKey("factoryApi.Models.Operation.OperationType", "OperationId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("factoryApi.Models.Operation.Tool", "Tool", b1 =>
                        {
                            b1.Property<long>("OperationId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Desc")
                                .ValueGeneratedOnAdd()
                                .HasColumnName("Tool")
                                .HasDefaultValue("");

                            b1.HasKey("OperationId");

                            b1.ToTable("Operations");

                            b1.HasOne("factoryApi.Models.Operation.Operation")
                                .WithOne("Tool")
                                .HasForeignKey("factoryApi.Models.Operation.Tool", "OperationId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
