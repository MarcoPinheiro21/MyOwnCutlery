// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using factoryApi.Context;

namespace factoryApi.Migrations
{
    [DbContext(typeof(MasterFactoryContext))]
    [Migration("20191219201050_Master")]
    partial class Master
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("factoryApi.Models.Machine.Machine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<long?>("MachineType");

                    b.Property<long?>("ProductionLineId");

                    b.Property<long>("ProductionLinePosition");

                    b.HasKey("Id");

                    b.HasIndex("Active");

                    b.HasIndex("Description")
                        .IsUnique();

                    b.HasIndex("MachineType");

                    b.HasIndex("ProductionLineId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("factoryApi.Models.Machine.MachineType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Desc");

                    b.Property<string>("VisualizationModel");

                    b.HasKey("Id");

                    b.HasIndex("Desc")
                        .IsUnique()
                        .HasFilter("[Desc] IS NOT NULL");

                    b.ToTable("MachineTypes");
                });

            modelBuilder.Entity("factoryApi.Models.Operation.Operation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OperationTypeId");

                    b.Property<long?>("ToolId");

                    b.HasKey("Id");

                    b.HasIndex("ToolId");

                    b.HasIndex("OperationTypeId", "ToolId")
                        .IsUnique()
                        .HasFilter("[OperationTypeId] IS NOT NULL AND [ToolId] IS NOT NULL");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("factoryApi.Models.Operation.OperationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ExecutionTime");

                    b.Property<string>("OperationTypeName");

                    b.Property<long>("SetupTime");

                    b.HasKey("Id");

                    b.ToTable("OperationTypes");
                });

            modelBuilder.Entity("factoryApi.Models.Operation.Tool", b =>
                {
                    b.Property<long>("ToolId");

                    b.Property<string>("Desc");

                    b.HasKey("ToolId");

                    b.ToTable("Tools");
                });

            modelBuilder.Entity("factoryApi.Models.ProductionLine.ProductionLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProductionLineName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ProductionLineName")
                        .IsUnique();

                    b.ToTable("ProductionLines");
                });

            modelBuilder.Entity("factoryApi.Models.Relationships.OperationMachineType", b =>
                {
                    b.Property<long>("OperationId");

                    b.Property<long>("MachineTypeId");

                    b.HasKey("OperationId", "MachineTypeId");

                    b.HasIndex("MachineTypeId");

                    b.ToTable("OperationMachineTypes");
                });

            modelBuilder.Entity("factoryApi.Models.Machine.Machine", b =>
                {
                    b.HasOne("factoryApi.Models.Machine.MachineType", "Type")
                        .WithMany()
                        .HasForeignKey("MachineType");

                    b.HasOne("factoryApi.Models.ProductionLine.ProductionLine", "ProductionLine")
                        .WithMany("MachinesList")
                        .HasForeignKey("ProductionLineId");
                });

            modelBuilder.Entity("factoryApi.Models.Operation.Operation", b =>
                {
                    b.HasOne("factoryApi.Models.Operation.OperationType", "OperationType")
                        .WithMany()
                        .HasForeignKey("OperationTypeId");

                    b.HasOne("factoryApi.Models.Operation.Tool", "Tool")
                        .WithMany()
                        .HasForeignKey("ToolId");
                });

            modelBuilder.Entity("factoryApi.Models.Relationships.OperationMachineType", b =>
                {
                    b.HasOne("factoryApi.Models.Machine.MachineType", "MachineType")
                        .WithMany("OperationMachineType")
                        .HasForeignKey("MachineTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("factoryApi.Models.Operation.Operation", "Operation")
                        .WithMany("OperationMachineType")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
